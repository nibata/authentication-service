# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgrespw
          POSTGRES_DB: auth
        ports:
          - 5432:5432
          
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
        architecture: x64
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Connect to postgres
      working-directory: ./app
      run: alembic upgrade head
      env:
        DB_DRIVER: postgresql
        DB_ASYNC_DRIVER: asyncpg
        DB_USER: postgres
        DB_PASS: postgrespw
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE_NAME: auth  
        SECRET_KEY: "WELL... NOTHING NEW, JUST THINKING ABOUT SECRETS"  
        ADMIN_EMAIL: ${{ secrets.MAIL_TEST }}
        PASS_ADMIN: ${{ secrets.PASSWORD_TEST }}
        USER_ADMIN: ${{ secrets.USER_TEST }}
        CRYPTO_KEY: ${{ secrets.CRYPTO_KEY_TEST}}
        DB_ASYNC_TEST: postgresql+asyncpg://postgres:postgrespw@localhost:5432/auth
        DB_TEST: postgresql+asyncpg://postgres:postgrespw@localhost:5432/auth

    - name: Unit Test
      working-directory: ./app
      run: pytest --junitxml=res-test.xml --cov=api --cov-report=xml:coverage.xml
      env:
        SECRET_KEY: "WELL... NOTHING NEW, JUST THINKING ABOUT SECRETS"
        DB_DRIVER: postgresql
        DB_ASYNC_DRIVER: asyncpg
        DB_USER: postgres
        DB_PASS: postgrespw
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE_NAME: auth
        ADMIN_EMAIL: ${{ secrets.MAIL_TEST }}
        USER_ADMIN: ${{ secrets.USER_TEST }}
        PASS_ADMIN: ${{ secrets.PASSWORD_TEST }}
        JWT_SECRET: please_please_update_me_please
        JWT_ALGORITHM: HS256
        SENTRY_DNS: ${{ secrets.SENTRY_DNS }}
        CRYPTO_KEY: ${{ secrets.CRYPTO_KEY_TEST}}
        DB_ASYNC_TEST: postgresql+asyncpg://postgres:postgrespw@localhost:5432/auth
        DB_TEST: postgresql+asyncpg://postgres:postgrespw@localhost:5432/auth

    - name: Publish Test Report
      uses: MishaKav/pytest-coverage-comment@main
      if: success() || failure()
      with:
        junitxml-path: ./app/res-test.xml
        pytest-xml-coverage-path: ./app/coverage.xml
